{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Programming/Project/Cloud-Customized-Newsfeed/client/src/container/home.js\";\nimport React, { Component } from 'react';\nimport NewsCard from '../components/newscard';\nimport axios from 'axios';\nimport StackGrid from \"react-stack-grid\";\nimport ClassNames from \"../css/home.css\";\nimport ReactLoading from \"react-loading\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport NoNetwork from '../assets/images/NoNetwork.png';\nimport ConditionBar from '../components/condtionbar';\nimport { Helmet } from 'react-helmet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getNews = () => {\n      axios.get(`https://newsapi.org/v2/top-headlines?${this.state.forCountry}${this.state.toquery}${this.state.forCategory}&pageSize=40&apiKey=${this.state.API_KEY}`).then(response => {\n        const articles = response.data.articles; //console.log(articles);\n\n        this.setState({\n          articles: articles,\n          loadingcheck: true\n        }, () => {\n          reactLocalStorage.remove('backupdata');\n          reactLocalStorage.remove('forCountry');\n          reactLocalStorage.remove('forCategory');\n          reactLocalStorage.remove('toquery');\n          reactLocalStorage.remove('CountryValue');\n          reactLocalStorage.remove('CategoryValue');\n          reactLocalStorage.remove('query');\n          reactLocalStorage.setObject('backupdata', articles);\n          reactLocalStorage.setObject('forCountry', this.state.forCountry);\n          reactLocalStorage.setObject('forCategory', this.state.forCategory);\n          reactLocalStorage.setObject('toquery', this.state.toquery);\n          reactLocalStorage.setObject('CountryValue', this.state.CountryValue);\n          reactLocalStorage.setObject('CategoryValue', this.state.CategoryValue);\n          reactLocalStorage.setObject('query', this.state.query);\n        });\n      }).catch(error => {\n        //console.log(error);\n        this.setState({\n          error: error,\n          loadingcheck: true,\n          articles: reactLocalStorage.getObject('backupdata'),\n          forCountry: reactLocalStorage.getObject('forCountry'),\n          forCategory: reactLocalStorage.getObject('forCategory'),\n          toquery: reactLocalStorage.getObject('toquery'),\n          CategoryValue: reactLocalStorage.getObject('CategoryValue'),\n          CountryValue: reactLocalStorage.getObject('CountryValue'),\n          query: reactLocalStorage.getObject('query')\n        });\n      });\n    };\n\n    this.handleChange = event => {\n      if (this.state.error) {\n        alert('Connect to the Network');\n      } else {\n        this.setState({\n          loadingcheck: false\n        });\n        this.setState({\n          query: event.target.value\n        }, () => {\n          //console.log(this.state.query);\n          this.setState({\n            toquery: `&q=${this.state.query}`\n          }, () => {\n            //console.log(this.state.toquery);\n            this.getNews();\n          });\n        });\n\n        if (this.state.query === '') {\n          this.setState({\n            toquery: ''\n          }, () => {\n            //console.log(this.state.url);\n            this.getNews();\n          });\n        }\n      }\n    };\n\n    this.handleCategoryDropdownChange = event => {\n      if (this.state.error) {\n        alert('Connect to the Network');\n      } else {\n        this.setState({\n          loadingcheck: false\n        }); //console.log(event.target.value);\n\n        this.setState({\n          CategoryValue: event.target.value\n        }, () => {\n          //console.log(this.state.CategoryValue);\n          this.setState({\n            forCategory: `&category=${this.state.CategoryValue}`\n          }, () => {\n            //console.log(this.state.forCategory);\n            this.getNews();\n          });\n        });\n      }\n    };\n\n    this.handleCountryDropdownChange = event => {\n      if (this.state.error) {\n        alert('Connect to the Network');\n      } else {\n        this.setState({\n          loadingcheck: false\n        }); //console.log(event.target.value);\n\n        this.setState({\n          CountryValue: event.target.value\n        }, () => {\n          //console.log(this.state.CountryValue);\n          this.setState({\n            forCountry: `country=${this.state.CountryValue}`\n          }, () => {\n            //console.log(this.state.forCountry);\n            this.getNews();\n          });\n        });\n      }\n    };\n\n    this.state = {\n      articles: [],\n      error: false,\n      toquery: '',\n      forCategory: '',\n      forCountry: 'country=us',\n      query: '',\n      CategoryValue: 'general',\n      CountryValue: '',\n      loadingcheck: true,\n      API_KEY: \"e9671d328640462a87a3de5fa12107d9\"\n    };\n  }\n\n  componentDidMount() {\n    this.getNews();\n  }\n\n  render() {\n    const articleState = this.state.articles;\n    let result = this.state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: ClassNames.loadingpage,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: ClassNames.NoNetworkimage,\n        src: NoNetwork,\n        alt: \"Summerize\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 79\n      }, this), \"News can't be loaded\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 41\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: ClassNames.loadingpage,\n      children: [\"Loading...\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 233\n      }, this), /*#__PURE__*/_jsxDEV(ReactLoading, {\n        type: \"bubbles\",\n        color: \"#777\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 239\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 183\n    }, this);\n\n    if (articleState && articleState.length > 1 && this.state.loadingcheck) {\n      result = /*#__PURE__*/_jsxDEV(StackGrid, {\n        columnWidth: 300,\n        monitorImagesLoaded: true,\n        children: this.state.articles.map((arg, i) => {\n          return /*#__PURE__*/_jsxDEV(NewsCard, {\n            articles: arg\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 18\n      }, this);\n    } else if (articleState.length === 0 && this.state.query !== '') {\n      result = /*#__PURE__*/_jsxDEV(\"p\", {\n        className: ClassNames.loadingpage,\n        children: \"No Search Result Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 18\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Customized Newsfeed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ConditionBar, {\n        selectedValueCountry: this.state.CountryValue,\n        handleChangeCountry: this.handleCountryDropdownChange,\n        selectedValueCategory: this.state.CategoryValue,\n        handleCategoryChange: this.handleCategoryDropdownChange,\n        value: this.state.query,\n        handleChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), result]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/macbook/Programming/Project/Cloud-Customized-Newsfeed/client/src/container/home.js"],"names":["React","Component","NewsCard","axios","StackGrid","ClassNames","ReactLoading","reactLocalStorage","NoNetwork","ConditionBar","Helmet","Home","constructor","props","getNews","get","state","forCountry","toquery","forCategory","API_KEY","then","response","articles","data","setState","loadingcheck","remove","setObject","CountryValue","CategoryValue","query","catch","error","getObject","handleChange","event","alert","target","value","handleCategoryDropdownChange","handleCountryDropdownChange","componentDidMount","render","articleState","result","loadingpage","NoNetworkimage","length","map","arg","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NewsCard from '../components/newscard';\nimport axios from 'axios';\nimport StackGrid from \"react-stack-grid\";\nimport ClassNames from \"../css/home.css\";\nimport ReactLoading from \"react-loading\";\n\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport NoNetwork from '../assets/images/NoNetwork.png';\nimport ConditionBar from '../components/condtionbar';\nimport { Helmet } from 'react-helmet';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            articles: [],\n            error: false,\n            toquery: '',\n            forCategory: '',\n            forCountry: 'country=us',\n            query: '',\n            CategoryValue: 'general',\n            CountryValue: '',\n            loadingcheck: true,\n            API_KEY: \"e9671d328640462a87a3de5fa12107d9\"\n        };\n    }\n    \n    getNews = () => {\n        axios\n          .get(`https://newsapi.org/v2/top-headlines?${this.state.forCountry}${this.state.toquery}${this.state.forCategory}&pageSize=40&apiKey=${this.state.API_KEY}`)\n          .then(response => {\n            const articles = response.data.articles;\n            //console.log(articles);\n            this.setState({ articles: articles, loadingcheck: true }, () => {\n              reactLocalStorage.remove('backupdata');\n              reactLocalStorage.remove('forCountry');\n              reactLocalStorage.remove('forCategory');\n              reactLocalStorage.remove('toquery');\n              reactLocalStorage.remove('CountryValue');\n              reactLocalStorage.remove('CategoryValue');\n              reactLocalStorage.remove('query');\n              reactLocalStorage.setObject('backupdata', articles);\n              reactLocalStorage.setObject('forCountry', this.state.forCountry);\n              reactLocalStorage.setObject('forCategory', this.state.forCategory);\n              reactLocalStorage.setObject('toquery', this.state.toquery);\n              reactLocalStorage.setObject('CountryValue', this.state.CountryValue);\n              reactLocalStorage.setObject('CategoryValue', this.state.CategoryValue);\n              reactLocalStorage.setObject('query', this.state.query);\n            });\n          })\n          .catch(error => {\n            //console.log(error);\n            this.setState({\n              error: error,\n              loadingcheck: true,\n              articles: reactLocalStorage.getObject('backupdata'),\n              forCountry: reactLocalStorage.getObject('forCountry'),\n              forCategory: reactLocalStorage.getObject('forCategory'),\n              toquery: reactLocalStorage.getObject('toquery'),\n              CategoryValue: reactLocalStorage.getObject('CategoryValue'),\n              CountryValue: reactLocalStorage.getObject('CountryValue'),\n              query: reactLocalStorage.getObject('query')\n            });\n          });\n      }\n    componentDidMount() {\n        this.getNews();\n    }\n    handleChange = (event) => {\n        if (this.state.error) {\n          alert('Connect to the Network')\n        }\n        else {\n          this.setState({ loadingcheck: false });\n          this.setState({ query: event.target.value }, () => {\n            //console.log(this.state.query);\n            this.setState({ toquery: `&q=${this.state.query}` }, () => {\n              //console.log(this.state.toquery);\n              this.getNews();\n            });\n          });\n    \n          if (this.state.query === '') {\n            this.setState({ toquery: '' }, () => {\n              //console.log(this.state.url);\n              this.getNews();\n            });\n          }\n        }\n      }\n\n      handleCategoryDropdownChange = (event) => {\n        if (this.state.error) {\n          alert('Connect to the Network')\n        }\n        else {\n          this.setState({ loadingcheck: false });\n          //console.log(event.target.value);\n          this.setState({ CategoryValue: event.target.value }, () => {\n            //console.log(this.state.CategoryValue);\n            this.setState({ forCategory: `&category=${this.state.CategoryValue}` }, () => {\n              //console.log(this.state.forCategory);\n              this.getNews();\n            });\n          });\n        }\n      }\n    \n      handleCountryDropdownChange = (event) => {\n        if (this.state.error) {\n          alert('Connect to the Network')\n        }\n        else {\n          this.setState({ loadingcheck: false });\n          //console.log(event.target.value);\n          this.setState({ CountryValue: event.target.value }, () => {\n            //console.log(this.state.CountryValue);\n            this.setState({ forCountry: `country=${this.state.CountryValue}` }, () => {\n              //console.log(this.state.forCountry);\n              this.getNews();\n                });\n            });\n            }\n        }\n    \n    \n    render() {\n        const articleState = this.state.articles;\n        let result = this.state.error ? <p className={ClassNames.loadingpage}><img className={ClassNames.NoNetworkimage} src={NoNetwork} alt='Summerize' />News can't be loaded</p> : <div className={ClassNames.loadingpage}>Loading...<br /><ReactLoading type=\"bubbles\" color=\"#777\" /></div>;\n        if (articleState && articleState.length > 1 && this.state.loadingcheck) {\n\n        result = <StackGrid\n            columnWidth={300}\n            monitorImagesLoaded={true}>\n            {this.state.articles.map((arg,i) => {\n            return <NewsCard key={i} articles={arg} />;\n            })}\n        </StackGrid>\n        }\n        else if (articleState.length === 0 && this.state.query !== '') {\n        result = <p className={ClassNames.loadingpage}>No Search Result Found</p>\n        }\n        return (\n        <div className=\"body\">\n          <Helmet>\n                    <title>Customized Newsfeed</title>\n            </Helmet>\n            <ConditionBar\n            selectedValueCountry={this.state.CountryValue}\n            handleChangeCountry={this.handleCountryDropdownChange}\n            selectedValueCategory={this.state.CategoryValue}\n            handleCategoryChange={this.handleCategoryDropdownChange}\n            value={this.state.query}\n            handleChange={this.handleChange} />\n            {result}\n        </div>\n    );\n  }\n}\n\n\nexport default Home;"]},"metadata":{},"sourceType":"module"}