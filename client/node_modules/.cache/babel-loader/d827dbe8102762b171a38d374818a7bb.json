{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Programming/Project/Cloud-Customized-Newsfeed/client/src/container/customizedfeed.js\",\n    _s = $RefreshSig$();\n\nimport { Account, AccountContext } from \"../cognito/Account\";\nimport userServices from \"../services/user.services\";\nimport React, { Component, useEffect, useContext, useState } from \"react\";\nimport axios from 'axios';\nimport NewsCard from '../components/newscard';\nimport StackGrid from \"react-stack-grid\";\nimport Helmet from \"react-helmet\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CFeed = () => {\n  _s();\n\n  const {\n    getSession\n  } = useContext(AccountContext);\n  const [interests, setInterests] = useState([\"none\", \"no\"]);\n  const [articles, setArticles] = useState([\"none\", \"no\"]);\n\n  const getInfo = session => {\n    userServices.getUser(session.idToken.payload['cognito:username']).then(data => {\n      setInterests(data.data.interest);\n    });\n  };\n\n  const InterestsToQuery = () => {\n    console.log(interests);\n    let query = interests.toString().toLowerCase().replaceAll(\",\", \" OR \");\n    console.log(query);\n    return query;\n  };\n\n  const query = InterestsToQuery();\n\n  const getNews = () => {\n    axios.get(`https://newsapi.org/v2/everything?q=${query}&pageSize=40&apiKey=e9671d328640462a87a3de5fa12107d9`, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      setArticles(response.data.articles);\n    });\n  };\n\n  useEffect(() => {\n    getSession().then(session => {\n      getInfo(session);\n      getNews();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(StackGrid, {\n      columnWidth: 300,\n      monitorImagesLoaded: true,\n      children: articles.map((arg, i) => {\n        return /*#__PURE__*/_jsxDEV(NewsCard, {\n          articles: arg\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CFeed, \"GLtMCGrIfT+t+W8H8kAG1+whQe8=\");\n\n_c = CFeed;\nexport default class Feed extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Your Personalized Feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Account, {\n        children: /*#__PURE__*/_jsxDEV(CFeed, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CFeed\");","map":{"version":3,"sources":["/Users/macbook/Programming/Project/Cloud-Customized-Newsfeed/client/src/container/customizedfeed.js"],"names":["Account","AccountContext","userServices","React","Component","useEffect","useContext","useState","axios","NewsCard","StackGrid","Helmet","CFeed","getSession","interests","setInterests","articles","setArticles","getInfo","session","getUser","idToken","payload","then","data","interest","InterestsToQuery","console","log","query","toString","toLowerCase","replaceAll","getNews","get","headers","response","map","arg","i","Feed","render"],"mappings":"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","sourcesContent":["\nimport { Account, AccountContext } from \"../cognito/Account\";\nimport userServices from \"../services/user.services\";\nimport React, { Component, useEffect, useContext, useState } from \"react\";\nimport axios from 'axios';\nimport NewsCard from '../components/newscard';\nimport StackGrid from \"react-stack-grid\";\nimport Helmet from \"react-helmet\"\n\nconst CFeed = () => {\n    const { getSession } = useContext(AccountContext);\n    const [interests, setInterests] = useState([\"none\", \"no\"]);\n    const [articles, setArticles] = useState([\"none\",\"no\"])\n\n    const getInfo = (session) =>{\n        userServices.getUser(session.idToken.payload['cognito:username']).then( data => {\n            setInterests(data.data.interest);\n        })\n    }\n\n    const InterestsToQuery = () =>{\n        console.log(interests)\n        let query = interests.toString().toLowerCase().replaceAll(\",\", \" OR \")\n        console.log(query)\n        return query;\n    }\n\n    const query = InterestsToQuery()\n\n    const getNews = () => {\n            axios.get(`https://newsapi.org/v2/everything?q=${query}&pageSize=40&apiKey=e9671d328640462a87a3de5fa12107d9`,  {\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }})\n              .then(response => {\n                setArticles(response.data.articles)\n          })\n    }\n\n    useEffect(() => { \n        getSession().then((session) => {  \n            getInfo(session);\n            getNews();\n        });\n        \n      }, []);\n\nreturn(\n        <div className=\"body\">\n            <StackGrid\n            columnWidth={300}\n            monitorImagesLoaded={true}>\n            {articles.map((arg,i) => {\n            return <NewsCard key={i} articles={arg} />;\n            })}\n            </StackGrid>\n        </div>\n    );\n};\n\nexport default class Feed extends Component {\n    render() {\n        \n        return (\n            <div>\n                <Helmet>\n                    <title>Your Personalized Feed</title>\n                </Helmet>\n                <Account>\n                    <CFeed/>\n                </Account>\n            </div>\n        )\n    };\n\n};\n\n\n"]},"metadata":{},"sourceType":"module"}