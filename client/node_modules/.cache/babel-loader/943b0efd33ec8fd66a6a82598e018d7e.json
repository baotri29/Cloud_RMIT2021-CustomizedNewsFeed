{"ast":null,"code":"const {\n  default: axios\n} = require('axios');\n\nconst API_URL = require('./api');\n\nclass UserService {\n  getUser(id) {\n    return axios.get(API_URL + \"/user?userId=\" + id);\n  }\n\n  updateInterest(id, interest) {\n    return axios.patch(API_URL + \"/user?userId=\" + id, {\n      \"userId\": JSON.stringify(id),\n      \"updateKey\": \"interest\",\n      \"updateValue\": JSON.stringify(interest)\n    }).catch(function (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n        // http.ClientRequest in node.js\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n\n      console.log(error.config);\n    });\n  }\n\n}\n\nexport default new UserService();","map":{"version":3,"sources":["/Users/macbook/RMIT/Courses/Cloud/ASM/Assignment2/COSC2638---CloudCMP---Personalized-New-Feeds/client/src/services/user.services.js"],"names":["default","axios","require","API_URL","UserService","getUser","id","get","updateInterest","interest","patch","JSON","stringify","catch","error","response","console","log","data","status","headers","request","message","config"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,OAAO,EAAEC;AAAX,IAAqBC,OAAO,CAAC,OAAD,CAAlC;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,OAAD,CAAvB;;AAEA,MAAME,WAAN,CAAkB;AAEdC,EAAAA,OAAO,CAACC,EAAD,EAAK;AACR,WAAOL,KAAK,CAACM,GAAN,CAAUJ,OAAO,GAAG,eAAV,GAA4BG,EAAtC,CAAP;AACH;;AAEDE,EAAAA,cAAc,CAACF,EAAD,EAAKG,QAAL,EAAe;AACzB,WAAOR,KAAK,CAACS,KAAN,CAAYP,OAAO,GAAG,eAAV,GAA4BG,EAAxC,EAA4C;AAC/C,gBAAUK,IAAI,CAACC,SAAL,CAAeN,EAAf,CADqC;AAE/C,mBAAa,UAFkC;AAG/C,qBAAeK,IAAI,CAACC,SAAL,CAAeH,QAAf;AAHgC,KAA5C,EAIJI,KAJI,CAIE,UAAUC,KAAV,EAAiB;AACtB,UAAIA,KAAK,CAACC,QAAV,EAAoB;AAClB;AACA;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeG,IAA3B;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeI,MAA3B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeK,OAA3B;AACD,OAND,MAMO,IAAIN,KAAK,CAACO,OAAV,EAAmB;AACxB;AACA;AACA;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACO,OAAlB;AACD,OALM,MAKA;AACL;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAAK,CAACQ,OAA3B;AACD;;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACS,MAAlB;AACD,KArBI,CAAP;AAsBH;;AA7Ba;;AAgClB,eAAe,IAAInB,WAAJ,EAAf","sourcesContent":["const { default: axios } = require('axios')\nconst API_URL = require('./api')\n\nclass UserService {\n\n    getUser(id) {\n        return axios.get(API_URL + \"/user?userId=\" + id);\n    }\n\n    updateInterest(id, interest) {\n        return axios.patch(API_URL + \"/user?userId=\" + id, {\n            \"userId\": JSON.stringify(id),\n            \"updateKey\": \"interest\",\n            \"updateValue\": JSON.stringify(interest),\n        }).catch(function (error) {\n            if (error.response) {\n              // The request was made and the server responded with a status code\n              // that falls out of the range of 2xx\n              console.log(error.response.data);\n              console.log(error.response.status);\n              console.log(error.response.headers);\n            } else if (error.request) {\n              // The request was made but no response was received\n              // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n              // http.ClientRequest in node.js\n              console.log(error.request);\n            } else {\n              // Something happened in setting up the request that triggered an Error\n              console.log('Error', error.message);\n            }\n            console.log(error.config);\n          });\n    }\n}\n\nexport default new UserService()"]},"metadata":{},"sourceType":"module"}