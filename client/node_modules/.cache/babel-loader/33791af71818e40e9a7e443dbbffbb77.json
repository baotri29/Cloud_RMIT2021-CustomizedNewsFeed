{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/RMIT/Courses/Cloud/ASM/Assignment2/COSC2638---CloudCMP---Personalized-New-Feeds/client/src/components/filterModal.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Account, AccountContext } from \"../cognito/Account\";\nimport userServices from \"../services/user.services\";\nimport { Component, useEffect, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CFilterModal = props => {\n  _s();\n\n  const {\n    getSession\n  } = useContext(AccountContext);\n  const [logged, setLogged] = useState(false);\n  const [interests, setInterests] = useState([]);\n\n  const getInfo = session => {\n    userServices.getUser(session.idToken.payload['cognito:username']).then(data => {\n      setInterests(data.data.interests);\n    });\n  };\n\n  const InterestsToQuery = () => {\n    let query = interests.join('').toLowerCase().replace(',', \"OR\");\n    return query;\n  };\n\n  var CustomizedCategory = [{\n    value: InterestsToQuery(),\n    name: 'For You'\n  }, {\n    value: 'business',\n    name: 'Business'\n  }, {\n    value: 'entertainment',\n    name: 'Entertainment'\n  }, {\n    value: 'general',\n    name: 'General'\n  }, {\n    value: 'health',\n    name: 'Health'\n  }, {\n    value: 'science',\n    name: 'Science'\n  }, {\n    value: 'sports',\n    name: 'Sports'\n  }, {\n    value: 'technology',\n    name: 'Technology'\n  }];\n  var Country = [{\n    value: 'us',\n    name: 'Usa'\n  }, {\n    value: 'in',\n    name: 'India'\n  }, {\n    value: 'au',\n    name: 'Australia'\n  }, {\n    value: 'ca',\n    name: 'Canada'\n  }, {\n    value: 'ch',\n    name: 'China'\n  }];\n  var Category = [{\n    value: 'business',\n    name: 'Business'\n  }, {\n    value: 'entertainment',\n    name: 'Entertainment'\n  }, {\n    value: 'general',\n    name: 'General'\n  }, {\n    value: 'health',\n    name: 'Health'\n  }, {\n    value: 'science',\n    name: 'Science'\n  }, {\n    value: 'sports',\n    name: 'Sports'\n  }, {\n    value: 'technology',\n    name: 'Technology'\n  }];\n  var Country = [{\n    value: 'us',\n    name: 'Usa'\n  }, {\n    value: 'in',\n    name: 'India'\n  }, {\n    value: 'au',\n    name: 'Australia'\n  }, {\n    value: 'ca',\n    name: 'Canada'\n  }, {\n    value: 'ch',\n    name: 'China'\n  }];\n  useEffect(() => {\n    getSession().then(session => {\n      setLogged(true);\n      getInfo(session);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filters\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"custom_dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"Category\",\n        id: \"Category\",\n        value: props.selectedValueCategory,\n        onChange: props.handleChangeCategory,\n        children: logged ? CustomizedCategory.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o.value,\n          children: o.name\n        }, o.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 30\n        }, this)) : Category.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o.value,\n          children: o.name\n        }, o.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"custom_dropdown\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"Country\",\n        id: \"Country\",\n        value: props.selectedValueCountry,\n        onChange: props.handleChangeCountry,\n        children: Country.map(o => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: o.value,\n          children: o.name\n        }, o.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 30\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CFilterModal, \"w3vUIFUPREN8imvNxVqjx1qbBJw=\");\n\n_c = CFilterModal;\nexport default class FilterModal extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Account, {\n        children: /*#__PURE__*/_jsxDEV(CFilterModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CFilterModal\");","map":{"version":3,"sources":["/Users/macbook/RMIT/Courses/Cloud/ASM/Assignment2/COSC2638---CloudCMP---Personalized-New-Feeds/client/src/components/filterModal.js"],"names":["React","Account","AccountContext","userServices","Component","useEffect","useContext","useState","CFilterModal","props","getSession","logged","setLogged","interests","setInterests","getInfo","session","getUser","idToken","payload","then","data","InterestsToQuery","query","join","toLowerCase","replace","CustomizedCategory","value","name","Country","Category","selectedValueCategory","handleChangeCategory","map","o","selectedValueCountry","handleChangeCountry","FilterModal","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Account, AccountContext } from \"../cognito/Account\";\nimport userServices from \"../services/user.services\";\nimport{ Component, useEffect, useContext, useState } from \"react\";\n\n\nconst CFilterModal = props => {\n    const { getSession } = useContext(AccountContext);\n    const [logged, setLogged] = useState(false);\n    const [interests, setInterests] = useState([]);\n\n    const getInfo = (session) =>{\n        userServices.getUser(session.idToken.payload['cognito:username']).then( data => {\n            setInterests(data.data.interests);\n        })\n  }\n\n    const InterestsToQuery = () =>{\n        let query = interests.join('').toLowerCase().replace(',', \"OR\")\n        return query;\n    }\n\n    var CustomizedCategory = [\n        {   \n            value: InterestsToQuery(),\n            name: 'For You'\n        },\n        {\n            value: 'business',\n            name: 'Business'\n        },\n        {\n            value: 'entertainment',\n            name: 'Entertainment'\n        },\n        {\n            value: 'general',\n            name: 'General'\n        },\n        {\n            value: 'health',\n            name: 'Health'\n        },\n        {\n            value: 'science',\n            name: 'Science'\n        },\n        {\n            value: 'sports',\n            name: 'Sports'\n        },\n        {\n            value: 'technology',\n            name: 'Technology'\n        }\n    ]\n    var Country = [\n        {\n            value: 'us',\n            name: 'Usa'\n        },\n        {\n            value: 'in',\n            name: 'India'\n        },\n        {\n            value: 'au',\n            name: 'Australia'\n        },\n        {\n            value: 'ca',\n            name: 'Canada'\n        },\n        {\n            value: 'ch',\n            name: 'China'\n        }\n\n    ]\n    var Category = [\n        {\n            value: 'business',\n            name: 'Business'\n        },\n        {\n            value: 'entertainment',\n            name: 'Entertainment'\n        },\n        {\n            value: 'general',\n            name: 'General'\n        },\n        {\n            value: 'health',\n            name: 'Health'\n        },\n        {\n            value: 'science',\n            name: 'Science'\n        },\n        {\n            value: 'sports',\n            name: 'Sports'\n        },\n        {\n            value: 'technology',\n            name: 'Technology'\n        }\n    ]\n    var Country = [\n        {\n            value: 'us',\n            name: 'Usa'\n        },\n        {\n            value: 'in',\n            name: 'India'\n        },\n        {\n            value: 'au',\n            name: 'Australia'\n        },\n        {\n            value: 'ca',\n            name: 'Canada'\n        },\n        {\n            value: 'ch',\n            name: 'China'\n        }\n    ]\n\n    useEffect(() => { \n        getSession().then((session) => {  \n            setLogged(true); \n            getInfo(session);\n        });\n      }, []);\n    return (\n        <div className=\"filters\">\n            <span className=\"custom_dropdown\">\n                <select name=\"Category\" id=\"Category\"\n                    value={props.selectedValueCategory}\n                    onChange={props.handleChangeCategory}>\n                    { logged ? CustomizedCategory.map(o =>\n                            (<option key={o.value} value={o.value}>{o.name}</option>\n                            )) : Category.map(o =>\n                                (<option key={o.value} value={o.value}>{o.name}</option>\n                                ))\n                    }\n                </select>\n            </span>\n            <span className=\"custom_dropdown\">\n                <select name=\"Country\" id=\"Country\"\n                    value={props.selectedValueCountry}\n                    onChange={props.handleChangeCountry}>\n                    {\n                        Country.map(o =>\n                            (<option key={o.value} value={o.value}>{o.name}</option>\n                            ))\n                    }\n                </select>\n            </span>\n        </div>\n    )\n}\n\nexport default class FilterModal extends Component {\n    render() {\n        return (\n            <div>\n                <Account>\n                    <CFilterModal/>\n                </Account>\n            </div>\n        )\n    };\n\n};\n"]},"metadata":{},"sourceType":"module"}