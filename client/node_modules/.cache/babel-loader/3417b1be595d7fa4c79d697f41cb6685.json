{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/RMIT/Courses/Cloud/ASM/Assignment2/COSC2638---CloudCMP---Personalized-New-Feeds/client/src/container/customizedfeed.js\",\n    _s = $RefreshSig$();\n\nimport { Account, AccountContext } from \"../cognito/Account\";\nimport userServices from \"../services/user.services\";\nimport { Component, useEffect, useContext, useState } from \"react\";\nimport axios from 'axios';\nimport NewsCard from '../components/newscard';\nimport StackGrid from \"react-stack-grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CFeed = () => {\n  _s();\n\n  const {\n    getSession\n  } = useContext(AccountContext);\n  const [interests, setInterests] = useState([\"none\", \"no\"]);\n  const [articles, setArticles] = useState([]);\n\n  const getInfo = session => {\n    userServices.getUser(session.idToken.payload['cognito:username']).then(data => {\n      setInterests(data.data.interest);\n    });\n  };\n\n  const InterestsToQuery = () => {\n    console.log(interests);\n    let query = interests.toString().toLowerCase().replaceAll(\",\", \"OR\");\n    return query;\n  };\n\n  const getNews = () => {\n    axios.get(`https://newsapi.org/v2/everything?q=${InterestsToQuery}&pageSize=40&apiKey=e9671d328640462a87a3de5fa12107d9`).then(response => {\n      console.log(response);\n      const articles = response.data.articles;\n      setArticles({\n        articles,\n        loadingcheck: true\n      }, () => {});\n    });\n  };\n\n  useEffect(() => {\n    getSession().then(session => {\n      getInfo(session);\n      getNews();\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(StackGrid, {\n      columnWidth: 300,\n      monitorImagesLoaded: true,\n      children: articles.map((arg, i) => {\n        return /*#__PURE__*/_jsxDEV(NewsCard, {\n          articles: arg\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CFeed, \"Pe37n9AwHJvJojGH6Y7ohqq8td8=\");\n\n_c = CFeed;\nexport default class Feed extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Account, {\n        children: /*#__PURE__*/_jsxDEV(CFeed, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CFeed\");","map":{"version":3,"sources":["/Users/macbook/RMIT/Courses/Cloud/ASM/Assignment2/COSC2638---CloudCMP---Personalized-New-Feeds/client/src/container/customizedfeed.js"],"names":["Account","AccountContext","userServices","Component","useEffect","useContext","useState","axios","NewsCard","StackGrid","CFeed","getSession","interests","setInterests","articles","setArticles","getInfo","session","getUser","idToken","payload","then","data","interest","InterestsToQuery","console","log","query","toString","toLowerCase","replaceAll","getNews","get","response","loadingcheck","map","arg","i","Feed","render"],"mappings":";;;AACA,SAASA,OAAT,EAAkBC,cAAlB,QAAwC,oBAAxC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAAQC,SAAR,EAAmBC,SAAnB,EAA8BC,UAA9B,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAM;AAAEC,IAAAA;AAAF,MAAiBN,UAAU,CAACJ,cAAD,CAAjC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,CAAC,MAAD,EAAS,IAAT,CAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMU,OAAO,GAAIC,OAAD,IAAY;AACxBf,IAAAA,YAAY,CAACgB,OAAb,CAAqBD,OAAO,CAACE,OAAR,CAAgBC,OAAhB,CAAwB,kBAAxB,CAArB,EAAkEC,IAAlE,CAAwEC,IAAI,IAAI;AAC5ET,MAAAA,YAAY,CAACS,IAAI,CAACA,IAAL,CAAUC,QAAX,CAAZ;AACH,KAFD;AAGH,GAJD;;AAMA,QAAMC,gBAAgB,GAAG,MAAK;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYd,SAAZ;AACA,QAAIe,KAAK,GAAGf,SAAS,CAACgB,QAAV,GAAqBC,WAArB,GAAmCC,UAAnC,CAA8C,GAA9C,EAAmD,IAAnD,CAAZ;AACA,WAAOH,KAAP;AACH,GAJD;;AAMA,QAAMI,OAAO,GAAG,MAAM;AACdxB,IAAAA,KAAK,CAACyB,GAAN,CAAW,uCAAsCR,gBAAiB,sDAAlE,EACGH,IADH,CACQY,QAAQ,IAAI;AAChBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,QAAZ;AACA,YAAMnB,QAAQ,GAAGmB,QAAQ,CAACX,IAAT,CAAcR,QAA/B;AACAC,MAAAA,WAAW,CAAC;AAACD,QAAAA,QAAD;AAAWoB,QAAAA,YAAY,EAAE;AAAzB,OAAD,EAAkC,MAAM,CACpD,CADY,CAAX;AAEL,KANC;AAOP,GARD;;AAUA9B,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,UAAU,GAAGU,IAAb,CAAmBJ,OAAD,IAAa;AAC3BD,MAAAA,OAAO,CAACC,OAAD,CAAP;AACAc,MAAAA,OAAO;AACV,KAHD;AAID,GALM,EAKJ,EALI,CAAT;AAOJ,sBACQ;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI,QAAC,SAAD;AACA,MAAA,WAAW,EAAE,GADb;AAEA,MAAA,mBAAmB,EAAE,IAFrB;AAAA,gBAGCjB,QAAQ,CAACqB,GAAT,CAAa,CAACC,GAAD,EAAKC,CAAL,KAAW;AACzB,4BAAO,QAAC,QAAD;AAAkB,UAAA,QAAQ,EAAED;AAA5B,WAAeC,CAAf;AAAA;AAAA;AAAA;AAAA,gBAAP;AACC,OAFA;AAHD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADR;AAWC,CA7CD;;GAAM3B,K;;KAAAA,K;AA+CN,eAAe,MAAM4B,IAAN,SAAmBnC,SAAnB,CAA6B;AACxCoC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,OAAD;AAAA,+BACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AATuC;AAW3C","sourcesContent":["\nimport { Account, AccountContext } from \"../cognito/Account\";\nimport userServices from \"../services/user.services\";\nimport{ Component, useEffect, useContext, useState } from \"react\";\nimport axios from 'axios';\nimport NewsCard from '../components/newscard';\nimport StackGrid from \"react-stack-grid\";\n\nconst CFeed = () => {\n    const { getSession } = useContext(AccountContext);\n    const [interests, setInterests] = useState([\"none\", \"no\"]);\n    const [articles, setArticles] = useState([])\n\n    const getInfo = (session) =>{\n        userServices.getUser(session.idToken.payload['cognito:username']).then( data => {\n            setInterests(data.data.interest);\n        })\n    }\n\n    const InterestsToQuery = () =>{\n        console.log(interests)\n        let query = interests.toString().toLowerCase().replaceAll(\",\", \"OR\")\n        return query;\n    }\n\n    const getNews = () => {\n            axios.get(`https://newsapi.org/v2/everything?q=${InterestsToQuery}&pageSize=40&apiKey=e9671d328640462a87a3de5fa12107d9`)\n              .then(response => {\n                console.log(response);\n                const articles = response.data.articles;\n                setArticles({articles, loadingcheck: true }, () => {\n              })\n          })\n    }\n\n    useEffect(() => { \n        getSession().then((session) => {  \n            getInfo(session);\n            getNews()\n        });\n      }, []);\n\nreturn(\n        <div className=\"body\">\n            <StackGrid\n            columnWidth={300}\n            monitorImagesLoaded={true}>\n            {articles.map((arg,i) => {\n            return <NewsCard key={i} articles={arg} />;\n            })}\n            </StackGrid>\n        </div>\n    );\n};\n\nexport default class Feed extends Component {\n    render() {\n        return (\n            <div>\n                <Account>\n                    <CFeed/>\n                </Account>\n            </div>\n        )\n    };\n\n};\n\n\n"]},"metadata":{},"sourceType":"module"}